/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TestloginImport } from './routes/testlogin'
import { Route as LoginImport } from './routes/login'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as ServerServeridImport } from './routes/server.$server_id'
import { Route as ExploreCategoryNameImport } from './routes/explore/$categoryName'
import { Route as ServerServeridChannelidImport } from './routes/server_.$server_id.$channel_id'

// Create/Update Routes

const TestloginRoute = TestloginImport.update({
  id: '/testlogin',
  path: '/testlogin',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ServerServeridRoute = ServerServeridImport.update({
  id: '/server/$server_id',
  path: '/server/$server_id',
  getParentRoute: () => rootRoute,
} as any)

const ExploreCategoryNameRoute = ExploreCategoryNameImport.update({
  id: '/explore/$categoryName',
  path: '/explore/$categoryName',
  getParentRoute: () => rootRoute,
} as any)

const ServerServeridChannelidRoute = ServerServeridChannelidImport.update({
  id: '/server_/$server_id/$channel_id',
  path: '/server/$server_id/$channel_id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/testlogin': {
      id: '/testlogin'
      path: '/testlogin'
      fullPath: '/testlogin'
      preLoaderRoute: typeof TestloginImport
      parentRoute: typeof rootRoute
    }
    '/explore/$categoryName': {
      id: '/explore/$categoryName'
      path: '/explore/$categoryName'
      fullPath: '/explore/$categoryName'
      preLoaderRoute: typeof ExploreCategoryNameImport
      parentRoute: typeof rootRoute
    }
    '/server/$server_id': {
      id: '/server/$server_id'
      path: '/server/$server_id'
      fullPath: '/server/$server_id'
      preLoaderRoute: typeof ServerServeridImport
      parentRoute: typeof rootRoute
    }
    '/server_/$server_id/$channel_id': {
      id: '/server_/$server_id/$channel_id'
      path: '/server/$server_id/$channel_id'
      fullPath: '/server/$server_id/$channel_id'
      preLoaderRoute: typeof ServerServeridChannelidImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/testlogin': typeof TestloginRoute
  '/explore/$categoryName': typeof ExploreCategoryNameRoute
  '/server/$server_id': typeof ServerServeridRoute
  '/server/$server_id/$channel_id': typeof ServerServeridChannelidRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/testlogin': typeof TestloginRoute
  '/explore/$categoryName': typeof ExploreCategoryNameRoute
  '/server/$server_id': typeof ServerServeridRoute
  '/server/$server_id/$channel_id': typeof ServerServeridChannelidRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/testlogin': typeof TestloginRoute
  '/explore/$categoryName': typeof ExploreCategoryNameRoute
  '/server/$server_id': typeof ServerServeridRoute
  '/server_/$server_id/$channel_id': typeof ServerServeridChannelidRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/login'
    | '/testlogin'
    | '/explore/$categoryName'
    | '/server/$server_id'
    | '/server/$server_id/$channel_id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/login'
    | '/testlogin'
    | '/explore/$categoryName'
    | '/server/$server_id'
    | '/server/$server_id/$channel_id'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/login'
    | '/testlogin'
    | '/explore/$categoryName'
    | '/server/$server_id'
    | '/server_/$server_id/$channel_id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  LoginRoute: typeof LoginRoute
  TestloginRoute: typeof TestloginRoute
  ExploreCategoryNameRoute: typeof ExploreCategoryNameRoute
  ServerServeridRoute: typeof ServerServeridRoute
  ServerServeridChannelidRoute: typeof ServerServeridChannelidRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  LoginRoute: LoginRoute,
  TestloginRoute: TestloginRoute,
  ExploreCategoryNameRoute: ExploreCategoryNameRoute,
  ServerServeridRoute: ServerServeridRoute,
  ServerServeridChannelidRoute: ServerServeridChannelidRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/",
        "/about",
        "/login",
        "/testlogin",
        "/explore/$categoryName",
        "/server/$server_id",
        "/server_/$server_id/$channel_id"
      ]
    },
    "/": {
      "filePath": "index.jsx"
    },
    "/about": {
      "filePath": "about.jsx"
    },
    "/login": {
      "filePath": "login.jsx"
    },
    "/testlogin": {
      "filePath": "testlogin.jsx"
    },
    "/explore/$categoryName": {
      "filePath": "explore/$categoryName.jsx"
    },
    "/server/$server_id": {
      "filePath": "server.$server_id.jsx"
    },
    "/server_/$server_id/$channel_id": {
      "filePath": "server_.$server_id.$channel_id.jsx"
    }
  }
}
ROUTE_MANIFEST_END */
